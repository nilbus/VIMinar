Basics
======

Open a file
-----------

    vim [filename]

or inside vim

    :e [filename]
    :edit [filename]

Modes
-----

[![](/nilbus/VIMinar/raw/master/modes.png)](http://blog.interlinked.org/tutorials/vim_tutorial.html)

Essentials
----------

### `u` **u**ndo

### `<ctrl>r` **r**edo

### search
    /regex search
    ?search backwards
    /\(TODO\|FIXME\)
    /\v(TODO|FIXME)
    /todo/i

see `:help regex` and `:help magic`

### search & replace
    :%s/old/new/g

### copy paste
`y<motion>` **y**ank (copy)

`d<motion>` **d**elete (cut)

`yy` **y**ank a line

`dd` **d**elete a line

`5dd` **d**elete 5 lines

`P` **p**aste (before cursor)

`p` **p**aste (after cursor)

### save & quit
    :w
    :write
    :q
    :quit
    :wq
    ZZ

Efficient Editing
=================

Single-line Movement
--------------------

`w` Forward a **w**ord (non-alpha)

`W` Forward a **w**ord (space)

`b` **B**ack a word (non-alpha)

`B` **B**ack a word (space)

`e` **E**nd of word (non-alpha)

`E` **E**nd of word (space)

`^` Home (1st character on line)

`0` Home (beginning of line)

`$` End (end of line)

`<enter>` Down + Home (1st character)

`-` Up + Home (1st character)

`t☐` Go up **t**o the character you type next, ex: `t(` **t**o the next (

`T☐` Go up **t**o the character you type next, backward

`f☐` **F**ind the character you type next

`F☐` **F**ind the character you type next, backward

`;` Next t or f match

`,` Previous t or f match

`<number><command>` Repeat any movement or edit number times


The new arrow keys
------------------

`j` up

`k` down

`h` left

`l` right


Moving to other lines
---------------------

`H` **H**ighest line on screen

`M` **M**edium line on screen

`L` **L**owest line on screen

`:100` Jump to line 100

`*` Search for the word under the cursor (forward)

`#` Search for the word under the cursor (backward)


Editing
-------

`i` **I**nsert mode (before cursor)

`I` **I**nsert mode (beginning of line)

`a` **A**ppend (insert after cursor)

`A` **A**ppend (insert after cursor)

`o` **O**pen a new line (before cursor)

`O` **O**pen a new line (after cursor)

`r☐` **R**eplace the character under the cursor with ☐

`R` **R**eplace in insert mode - type over characters

`J` **J**oin lines with a space

`gJ` **J**oin lines

`d<motion>` **D**elete (cut) to wherever you move next

`D` **D**elete to the end of the line

`c<motion>` **C**change to wherever you move next (delete + insert)

`C` **C**change to the end of the line

`x` Delete key

`X` Backspace key

`s` **S**wap the current character (x + insert)

`S` **S**wap the current line (cc + insert)

`xp` transpose teh-like typo (delete and paste-after)

`.` Repeat the last edit


Scrolling
---------

`^E` Scroll down

`^Y` Scroll up

`^F` **F**orward a page (page down)

`^B` **B**ack a page (page up)

`^U` **U**p 1/2 page

`^D` **D**own 1/2 page

`z<enter>` Scroll so cursor is at top of screen

`zz` or `z.` Scroll so cursor is at middle of screen

`z-` Scroll so cursor is at bottom of screen


Window Basics
-------------

`^W n` **N**ew window

`^W s` **S**plit window

`^W k` or `^W <up>` Move cursor up a window

`^W j` or `^W <down>` Move cursor down a window

`^W c` or `:q` **C**close window

`:help ^W`


Buffers
-------

`:buffers` buffer list

`:b partOfFilename` switch to buffer (tab-completable)


Spell Checking
--------------

`:set spell`
`:help spell`


Macros
------

`qa` start recording macro a. Can use any letter

`q` stop recording

`@a` replay macro a

`qA` append to macro a

Caveat: `u` undo during recording won't act the same when played back, because playback acts as a single undo action. Don't use undo when recording.

Examples:

* adding --- to markdown
* restructuring html tables


Indentation
-----------

`==` Fix indentation on current line

`>>` Indent current line

`5>>` Indent 5 lines

`>>` Indent current line

`:set autoindent` or `:set ai`

`:set cindent`


Other neat tricks
=================

Configuration
-------------

My [~/.vimrc](.vimrc)

Set inside the editor with `:set foo=bar`

Ex:
    :set tabstop=4 # make tabs 4 characters wide
    :set ts=4      # make tabs 4 characters wide
    :set paste     # don't autoindent
    :set paste!    # same as :set nopaste

Shell commands
--------------

!rm oldfile
:w !sudo tee %
:!javac %

Help
----

* `:help`
* [Vim Introduction and Tutorial](http://blog.interlinked.org/tutorials/vim_tutorial.html)

